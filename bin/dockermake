#!/bin/bash

function usage {
	cat <<EOF
Usage:
    $0 <docker image> [directory] [command]

        docker image - image to compile with. See output of "docker images"

        directory - folder from which to run command.
                  - Note: no parent directories will be available from within the
                    docker image. This directory must be the root of all relevant
                    source

        command - run a different command (default "make")

    Ex: Use the base toolchain to run make with a special target:

        $0 wsbu/stage-toolbox "make bin"

EOF
}

# custom image name to ensure removal
DKRMK="dkrmk"

# This is where we will mount "source" within the docker container
MOUNT=/mnt

DOCKER_USER=
DOCKER_VOLUME="--volume '$(pwd):$MOUNT'"

while getopts "C:hu" opt; do
	case $opt in
		h)
			usage
			exit
			;;
		C)
			if [ -d "$OPTARG" ]; then
				DOCKER_VOLUME="--volume '$(cd "$OPTARG"; pwd):$MOUNT'"
			else
				echo "$OPTARG is not a valid directory"
				exit 1
			fi
			;;
		u)
			# This will run the container as current user/group, so all created
			# files will be owned by the same (instead of root)
			DOCKER_USER="--user $UID:$(id -g $UID)"
			;;
	esac
done
shift $((OPTIND-1))

IMAGE="$1"
COMMAND="make"

if ! docker images | grep --quiet "^$IMAGE "; then
	echo "\"$IMAGE\" does not appear to be a valid docker image" 1>&2
	echo "See output of \"docker images\"" 1>&2
	exit 1
fi
shift
if [ -n "$1" ]; then
	COMMAND=$1
	shift
	for arg in "$@"; do
		arg=${arg//\"/\\\"}
		arg=${arg// /\\ }
		COMMAND="$COMMAND $arg"
	done
fi

# Get an absolute path
DIRECTORY="$(cd $DIRECTORY && pwd)"

# Run command from mounted directory
COMMAND="sh -c \"cd $MOUNT && $COMMAND\""

# "--rm" should remove the container after the command exits. However, I've seen
# it try to remove the container too soon. Trying this to see if it is any safer
echo "docker run"   "--rm"    "$DOCKER_USER $DOCKER_VOLUME $IMAGE $COMMAND"
eval "docker run --name $DKRMK $DOCKER_USER $DOCKER_VOLUME $IMAGE $COMMAND"
# wait for the container to really exit
docker wait $DKRMK >/dev/null
docker diff $DKRMK
docker rm $DKRMK >/dev/null
